// <auto-generated />
using System;
using HelpCasa.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HelpCasa.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241016194423_CreateUsuariosTable")]
    partial class CreateUsuariosTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HelpCasa.Models.Servico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DescricaoServico")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EmpregadoId")
                        .HasColumnType("integer");

                    b.Property<int>("EmpregadorId")
                        .HasColumnType("integer");

                    b.Property<string>("Localizacao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomeServico")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("PrecoServico")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("EmpregadoId");

                    b.HasIndex("EmpregadorId");

                    b.ToTable("Servicos");
                });

            modelBuilder.Entity("HelpCasa.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Avaliacao")
                        .HasColumnType("integer");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("character varying(13)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FotoPerfil")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SenhaHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasDiscriminator().HasValue("Usuario");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("HelpCasa.Models.Empregado", b =>
                {
                    b.HasBaseType("HelpCasa.Models.Usuario");

                    b.Property<string>("AreaLimiteAtuacao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Experiencia")
                        .HasColumnType("integer");

                    b.Property<string>("FaixaHorarioDisponivel")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasDiscriminator().HasValue("Empregado");
                });

            modelBuilder.Entity("HelpCasa.Models.Empregador", b =>
                {
                    b.HasBaseType("HelpCasa.Models.Usuario");

                    b.HasDiscriminator().HasValue("Empregador");
                });

            modelBuilder.Entity("HelpCasa.Models.Servico", b =>
                {
                    b.HasOne("HelpCasa.Models.Empregado", "Empregado")
                        .WithMany("ServicosOferecidos")
                        .HasForeignKey("EmpregadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HelpCasa.Models.Empregador", "Empregador")
                        .WithMany("ServicosContratados")
                        .HasForeignKey("EmpregadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empregado");

                    b.Navigation("Empregador");
                });

            modelBuilder.Entity("HelpCasa.Models.Empregado", b =>
                {
                    b.Navigation("ServicosOferecidos");
                });

            modelBuilder.Entity("HelpCasa.Models.Empregador", b =>
                {
                    b.Navigation("ServicosContratados");
                });
#pragma warning restore 612, 618
        }
    }
}
